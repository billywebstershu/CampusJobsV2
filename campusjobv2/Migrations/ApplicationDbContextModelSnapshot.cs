// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using campusjobv2;

#nullable disable

namespace campusjobv2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("campusjobv2.Models.Entities.Admin", b =>
                {
                    b.Property<int>("Admin_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Admin_ID"));

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Admin_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.ApprovedShift", b =>
                {
                    b.Property<int>("Timesheet_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Timesheet_ID"));

                    b.Property<DateTime?>("Date_Reviewed")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Date_Uploaded")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Hours_Worked")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Offer_ID")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Timesheet_ID");

                    b.HasIndex("Offer_ID");

                    b.ToTable("ApprovedShifts");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Student_ID"));

                    b.Property<int>("Recruitment_ID")
                        .HasColumnType("int");

                    b.HasKey("Student_ID");

                    b.HasIndex("Recruitment_ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Notification", b =>
                {
                    b.Property<int>("Notification_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Notification_ID"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Read")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Notification_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.OfferedShift", b =>
                {
                    b.Property<int>("Offer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Offer_ID"));

                    b.Property<DateTime>("Date_Offered")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("End_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Recruitment_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_Date")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_Hours")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Offer_ID");

                    b.HasIndex("Recruitment_ID");

                    b.HasIndex("Student_ID");

                    b.ToTable("OfferedShifts");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Recruiter", b =>
                {
                    b.Property<int>("Recruitment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Recruitment_ID"));

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Recruitment_ID");

                    b.HasIndex("User_ID")
                        .IsUnique();

                    b.ToTable("Recruiters");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.RightToWorkDocument", b =>
                {
                    b.Property<int>("RTW_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RTW_ID"));

                    b.Property<string>("Document_URL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Upload_Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("RTW_ID");

                    b.HasIndex("Student_ID");

                    b.ToTable("RightToWorkDocuments");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.StudentWorker", b =>
                {
                    b.Property<int>("VisaStatus_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VisaStatus_ID"));

                    b.Property<int>("Recruitment_ID")
                        .HasColumnType("int");

                    b.HasKey("VisaStatus_ID");

                    b.HasIndex("Recruitment_ID");

                    b.ToTable("StudentWorkers");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("User_ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.VisaStatus", b =>
                {
                    b.Property<int>("VisaStatusID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VisaStatusID"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.HasKey("VisaStatusID");

                    b.HasIndex("Student_ID");

                    b.ToTable("VisaStatuses");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Admin", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("campusjobv2.Models.Entities.Admin", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.ApprovedShift", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.OfferedShift", "OfferedShift")
                        .WithMany("ApprovedShifts")
                        .HasForeignKey("Offer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OfferedShift");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Employee", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.Recruiter", "Recruiter")
                        .WithMany("Employees")
                        .HasForeignKey("Recruitment_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Notification", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.OfferedShift", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.Recruiter", "Recruiter")
                        .WithMany("OfferedShifts")
                        .HasForeignKey("Recruitment_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("campusjobv2.Models.Entities.Employee", "Employee")
                        .WithMany("OfferedShifts")
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Recruiter", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.User", "User")
                        .WithOne("Recruiter")
                        .HasForeignKey("campusjobv2.Models.Entities.Recruiter", "User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.RightToWorkDocument", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.Employee", "Employee")
                        .WithMany("RightToWorkDocuments")
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.StudentWorker", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.Recruiter", "Recruiter")
                        .WithMany("StudentWorkers")
                        .HasForeignKey("Recruitment_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.VisaStatus", b =>
                {
                    b.HasOne("campusjobv2.Models.Entities.Employee", "Employee")
                        .WithMany("VisaStatuses")
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Employee", b =>
                {
                    b.Navigation("OfferedShifts");

                    b.Navigation("RightToWorkDocuments");

                    b.Navigation("VisaStatuses");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.OfferedShift", b =>
                {
                    b.Navigation("ApprovedShifts");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.Recruiter", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("OfferedShifts");

                    b.Navigation("StudentWorkers");
                });

            modelBuilder.Entity("campusjobv2.Models.Entities.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Notifications");

                    b.Navigation("Recruiter");
                });
#pragma warning restore 612, 618
        }
    }
}
